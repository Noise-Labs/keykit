Requirements¥ PowerPC-based Mac.¥ System 7.0 or later with AppleEvent support.¥ QuickTime 2.5 or later (4.1 or later for MIDI input).InstallationThe keykit application assumes that it lives in the keykit home directory. Ifyou move it, it won't find the libraries it needs to run.Operation:For operations that require clicking the "right" mouse button, hold the optionkey down while clicking.To use QuickTime's built-in synthesizer, select "QuickTime Music Synthesizer" as the default in the "Music" panel in the "QuickTime Settings" control panel:ÊIf you wish to use a synthesizer connected to a serial port, select "General MIDI" in the above dialog, then push the "Edit List..." button to add a General MIDI synth to the list. Now select the MIDI port that matches the serial port driver you setup in OMS (or whatever MIDI transport you're using). Then select the same port for MIDI input:ÊÊThe on-line, context-sensitive help feature requires the "Help On Wheels" freeware (included in the "bin" folder).To use the keylib application, copy it to the library folder that needs updating and launch it there.Implementation DetailsAppleEventsI implemented the feature where double-clicking a keykit *.kp document launcheskeykit using the standard "OpenDocuments" AppleEvent. You can also double-click(or drag and drop) a *.kp document after keykit is already running. I have aspecial task running that is defined in liblocal/prerc.k to watch for theAppleEvents. Currently, this only works for *.kp documents, but there are otherinteresting possiblities.You can also control KeyKit using AppleScripts¨. Currently only "do script" commands are available, but this is not very limiting. The string sent to KeyKit is executed using 'eval'. As of AppleScript 1.3, "do script" was moved to the "Miscellaneous" suite and it doesn't seem to be recognized in the script editor in the standard OS installation. It used to work as follows:Example:tell application "KeyKit"	do script "print(\"This is a test of sending scripts to KeyKit\")"	do script "realtime('c e g, f a c')"end tellVersion History6.5e b2¥ Fixed bug where menu bar didn't get drawn at first.¥ Increased default memory allocations to 8MB minimum, 16MB preferred.6.5e b1¥ Compiled with the KeyKit 6.5e source (PowerPC only).¥ Compiled with universal headers version 3.3¥ Tested with MacOS 9.0 and QuickTime 4.16.2a b3¥ Removed check for Code Fragment Manager in 68k code.6.2a b2¥ Fixed problem with losing track of the mouse location during rapid mouse movement.¥ Used Time Manager task callback ¥ Used the Process Manager to locate KeyKit's home directory per Michael Thies.¥ Restructured as Codewarrior Pro project.¥ Added support for 68K Macs.¥ Tested with MacOS 8. 6.2a b1¥ Compiled with the KeyKit 6.2a source (PowerPC only).¥ Used Time Manager task callback functionality rather than polling via Microseconds function.¥ Added a "do script" AppleEvent.¥ Improved keyboard input.6.0f b3¥ Made keykit use the QuickTime Music Architecture (QTMA) exclusively, allowing compatiblility with OMS as well as MIDI Manager. QuickTime 2.5 or later is required. Unfortunately, only OMS output is working (a limitation of QTMA).6.0f b2¥ Fixed a bug with pitch bend command sent to the QuickTime Music Architecture.¥ Fixed a bug in the mdep_milliclock routine when keykit ran longer than about 71 		minutes.¥ Included PDF versions of the documents that can be read by the free Adobe Acrobatª Reader (http://www.adobe.com). They can also be printed on non-Postscript printers (like mine).¥ Included a FAT binary for the keylib application.6.0f b1¥ Initial release of new Mac version.Jack R. Wrightjwright@enteract.com